/*
*	동적 계획법

	- 복잡한 문제를 간단한 여러 개의 부분 문제로 나누고, 부분 문제에 대한 해답을 활용하여 
	  전체 문제를 해결하는 문제 해결 방식

	- 분할 정복법에서는 분할 된 부분 문제들이 서로 겹치지 않지만, 동적 계획법에서는 분할된 부분문제들이 중복되는
	  문제가 발생한다는 점이 다름

	- 보통 최적화 문제 또는 카운팅 문제에 적용

	- 동적계획 문제들 : 배낭문제, 부분집합의 합문제, 최장 공통부분 시퀀스, 연쇄행렬 곱셈, 최소비용 경로

	*동적계획법 필요조건*
	
	- 중복되는 부분 문제(overlapping subproblems)
		주어진 문제를 여러개의 부분 문제로 분할 할 경우, 몇몇 부분 문제가 반복되어 나타나는 현상
		부분 문제의 솔루션을 저장하여 같은 부분 문제를 중복해서 계산하지 않도록 설정.

	- 최적 부분 구조(opimal substructure)
		부분 문제의 최적해(optimal solution)를 조합하여 전체 문제의 최적해를 구할 수 있는 경우를 지칭

	* 동적 계획법 문제의 해결방법
	
	- 기저조건(base case) 정의 (피보나치수열에 첫번째 정의 1,1)
	- 상태 전환(state transition)을 나타내는 순환식 정의 (피보나치수열)
	- 순환식을 메모이제이션(memoization) 또는 타뷸레이션(tabulation)방식으로 풀이

	피보나치 수열
	* 재귀 함수를 이용한 피보나치 수열 계싼
	* 중복되는 부분 문제 발생
	

	메모이제이션
	- 중복계산 될 수 있는 값을 캐시에 저장하여 재사용
	- 하향식(top-down)접근 방법
	- O(n)

	int fibo(int n)
	{
		if(n < 2)
			return n;

		if (memo[n] != -1)
			return memo[n];

		memo[n] = fibo(n-2) + fibo(n-1);
		
		return memo[n];

	}

	타뷸레이션
	
*/